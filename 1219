SELECT FIRST_NAME , SALARY , EMPLOYEE_ID 
FROM EMPLOYEES 
WHERE SALARY = (SELECT MIN(SALARY)
				FROM EMPLOYEES);

SELECT AVG(SALARY)
FROM EMPLOYEES;
				
SELECT FIRST_NAME , SALARY 
FROM EMPLOYEES 
WHERE SALARY < (SELECT AVG(SALARY)
				FROM EMPLOYEES);
			
SELECT FIRST_NAME , SALARY 
FROM EMPLOYEES 
WHERE SALARY IN (SELECT SALARY 
				FROM EMPLOYEES 
				WHERE DEPARTMENT_ID = 110);

SELECT FIRST_NAME , SALARY 
FROM EMPLOYEES 
WHERE SALARY > ANY (SELECT SALARY 
				FROM EMPLOYEES 
				WHERE DEPARTMENT_ID = 110);

SELECT FIRST_NAME , SALARY 
FROM EMPLOYEES 
WHERE SALARY > ALL (SELECT SALARY 
				FROM EMPLOYEES 
				WHERE DEPARTMENT_ID = 110);
			
SELECT DEPARTMENT_ID , MAX(SALARY)
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID ;

SELECT DEPARTMENT_ID , EMPLOYEE_ID , FIRST_NAME , SALARY 
FROM EMPLOYEES 
WHERE (DEPARTMENT_ID, SALARY) IN (SELECT DEPARTMENT_ID , MAX(SALARY)
									FROM EMPLOYEES
									GROUP BY DEPARTMENT_ID );

SELECT e.DEPARTMENT_ID , e.EMPLOYEE_ID , e.FIRST_NAME , e.SALARY
FROM EMPLOYEES e, (SELECT DEPARTMENT_ID , MAX(SALARY) salary --salary라는 별명을 붙여줌
				FROM EMPLOYEES
				GROUP BY DEPARTMENT_ID ) s
WHERE e.department_id = s.department_id
AND e.salary = s.salary; --여기서 별명을 불러옴

SELECT FIRST_NAME , SALARY 
FROM EMPLOYEES e 
ORDER BY 2;

SELECT rownum, FIRST_NAME , SALARY 
FROM (SELECT first_name, salary
		FROM EMPLOYEES
		ORDER BY salary desc) 
WHERE rownum <= 3;

SELECT rn, first_name, salary
FROM (SELECT rownum rn, first_name, salary
		FROM (SELECT first_name, salary
				FROM EMPLOYEES e
				ORDER BY salary desc))
WHERE rn >= 11
AND rn <= 20;

SELECT rn, first_name, salary
FROM (SELECT rownum rn, first_name, salary
		FROM (SELECT first_name, salary
				FROM EMPLOYEES e
				ORDER BY salary desc))
WHERE rn >= 100
AND rn <= 110;

SELECT rn, first_name, salary, hire_date
FROM (SELECT rownum rn, first_name, salary, hire_date
		FROM (SELECT e.first_name, e.salary, e.hire_date
				FROM EMPLOYEES e
				WHERE TO_CHAR(e.hire_date, 'YYYY') = '2007' 
				ORDER BY e.salary desc)
				)
WHERE rn >= 3
AND rn <= 7;













ALTER USER hr IDENTIFIED BY hr ACCOUNT unlock; 
COMMIT ;

CREATE USER webdb IDENTIFIED BY 1234;
GRANT resource, CONNECT TO webdb;
--DROP user webdba CASECADE;
COMMIT ; --지금 즉시 파일에 저장하세요 / Auto라고 써있어서 자동 저장이 되므로 안해도 되긴함..




















SELECT sysdate FROM dual;

CREATE TABLE book(
		book_id NUMBER(5),
		title varchar2(50),
		author varchar2(10),
		pub_date date);

SELECT *
FROM book;

ALTER TABLE book ADD (pubs varchar2(50));

SELECT *
FROM book;

ALTER TABLE book MODIFY (title varchar2(100));

SELECT *
FROM book;

ALTER TABLE book DROP (author);

SELECT *
FROM book;

SELECT *
FROM ALL_TABLES
WHERE TABLE_NAME LIKE 'BOOK';

SELECT *
FROM all_tab_columns
WHERE table_name = 'BOOK';

RENAME book TO article;

SELECT *
FROM book;

SELECT *
FROM article;

DROP TABLE article;

CREATE TABLE author(
	author_id NUMBER(10),
	author_name VARCHAR2(100) NOT NULL,
	author_desc VARCHAR2(500),
	PRIMARY KEY(author_id)
	);

SELECT *
FROM author;

CREATE TABLE book(    --author이 주, book이 종
	book_id NUMBER(10),
	title VARCHAR2(100) NOT NULL,
	pubs VARCHAR2(100),
	pub_date DATE,
	author_id NUMBER(10),
	PRIMARY KEY(book_id),
	CONSTRAINT c_book_fk FOREIGN KEY (author_id)
	REFERENCES author(author_id)
	);

SELECT *
FROM book;




INSERT INTO BOOK 
VALUES (1, '우리들의 일그러진 영웅', '다림', '22-FEB-1998', 1);

INSERT INTO BOOK 
VALUES (2, '삼국지', '민음사', '01-MAR-2002', 1);

INSERT INTO BOOK 
VALUES (3, '토지', '마로니에북스', '15-AUG-2012', 2);

INSERT INTO BOOK 
VALUES (4, '유시민의 글쓰기 특강', '생각의길', '01-APR-2015', 3);

INSERT INTO BOOK 
VALUES (5, '패션왕', '중앙북스(books)', '22-FEB-2012', 4);

INSERT INTO BOOK 
VALUES (6, '순정만화', '재미주의', '03-AUG-2011', 5);

INSERT INTO BOOK 
VALUES (7, '오직두사람', '문학동네', '04-MAY-2017', 6);

INSERT INTO BOOK 
VALUES (8, '26년', '재미주의', '04-FEB-2012', 5);

SELECT b.BOOK_ID , 
		b.TITLE , 
		b.PUBS , 
		TO_CHAR(b.PUB_DATE, 'YYYY-MM-DD') PUB_DATE , 
		a.AUTHOR_ID , 
		a.AUTHOR_NAME , 
		a.AUTHOR_DESC 
FROM book b, author a 
WHERE a.AUTHOR_ID = b.AUTHOR_ID  ;

UPDATE AUTHOR 
SET	AUTHOR_DESC = '서울특별시'
WHERE AUTHOR_ID = 5;
	
DELETE FROM AUTHOR --만들 때는 author 먼저 만들지만 지울 때는 역순으로 book에 대한 정보를 먼저 없애줘야 지울 수 있음
WHERE AUTHOR_ID = 4;

SELECT *
FROM author;

INSERT INTO AUTHOR(author_id, author_name)
VALUES (2, '이문열');

SELECT *
FROM author;

UPDATE BOOK  
SET title = '유시민의 글쓰기 특강',
	pubs = '생각의길',
	PUB_DATE = '01-APR-2015',
	AUTHOR_ID = 3
WHERE book_ID = 4 ;

UPDATE AUTHOR 
SET AUTHOR_NAME = '기안84',
	AUTHOR_DESC = '웹툰작가'
WHERE AUTHOR_ID = 1 ;

SELECT *
FROM author;

DELETE FROM AUTHOR 
WHERE author_id = 21;

SELECT *
FROM author;

CREATE SEQUENCE seq_author_id
INCREMENT BY 1
START WITH 1;

SELECT seq_author_id.currval FROM dual;
SELECT seq_author_id.nextval FROM dual;

INSERT INTO AUTHOR
VALUES (seq_author_id.nextval, '이문열', '경북 영양');

INSERT INTO AUTHOR
VALUES (seq_author_id.nextval, '박경리', '경상남도 통영');

INSERT INTO AUTHOR
VALUES (seq_author_id.nextval, '유시민', '17대 국회의원');

INSERT INTO AUTHOR
VALUES (seq_author_id.nextval, '기안84', '기안동에서 산 84년생');

INSERT INTO AUTHOR
VALUES (seq_author_id.nextval, '강풀', '온라인 만화가 1세대');

INSERT INTO AUTHOR
VALUES (seq_author_id.nextval, '김영하', '알쓸신잡');

SELECT * FROM USER_SEQUENCES ;

SELECT seq_author_id.currval FROM dual;

SELECT seq_author_id.nextval FROM dual;

DROP SEQUENCE seq_author_id;

INSERT INTO board
VALUES (1, '게시판제목', '본문내용', SYSDATE);

DELETE FROM AUTHOR 
WHERE author_id = 12;

SELECT *
FROM author;

UPDATE AUTHOR 
SET AUTHOR_NAME = '이문열',
	AUTHOR_DESC = '경북 영양'
WHERE AUTHOR_ID = 1 ;

UPDATE AUTHOR 
SET AUTHOR_NAME = '박경리',
	AUTHOR_DESC = '경상남도 통영'
WHERE AUTHOR_ID = 2 ;

UPDATE AUTHOR 
SET AUTHOR_NAME = '유시민',
	AUTHOR_DESC = '17대 국회의원'
WHERE AUTHOR_ID = 3 ;

UPDATE AUTHOR 
SET AUTHOR_NAME = '기안84',
	AUTHOR_DESC = '기안동에서 산 84년생'
WHERE AUTHOR_ID = 4 ;

UPDATE AUTHOR 
SET AUTHOR_NAME = '강풀',
	AUTHOR_DESC = '온라인 만화가 1세대'
WHERE AUTHOR_ID = 5 ;

UPDATE AUTHOR 
SET AUTHOR_NAME = '김영하',
	AUTHOR_DESC = '알쓸신잡'
WHERE AUTHOR_ID = 6 ;

SELECT *
FROM author;

CREATE TABLE post(    --author이 주, book이 종
	ZIPNUM NUMBER(10),
	SIDO VARCHAR2(100),
	SIDOENG VARCHAR2(100),
	SIGUN VARCHAR2(100),
	SIGUNENG VARCHAR2(100),
	EUPMYEON VARCHAR2(100),
	EUPMYEONENG VARCHAR2(100),
	DOROCODE NUMBER(10),
	DORONAME VARCHAR2(100),
	DOROENG VARCHAR2(100),
	JIHA NUMBER(10),
	BUILDINGO NUMBER(10),
	BUILDINGS NUMBER(10),
	DELIVER VARCHAR2(100),
	SGGBUILDING VARCHAR2(100),
	BJDCODE NUMBER(10),
	BJDNAME VARCHAR2(100),
	LINAME VARCHAR2(100),
	HJDNAME VARCHAR2(100),
	MOUNTAIN NUMBER(10),
	JIO NUMBER(10),
	EMDNUM NUMBER(10),
	JIS NUMBER(10),
	PPOST NUMBER(10),
	POSTCODE NUMBER(10)
	);
	
CREATE TABLE SEOUL (    --author이 주, book이 종
	ZIPNUM VARCHAR2(100) ,
	SIDO VARCHAR2(100) ,
	SIDOENG VARCHAR2(100) ,
	SIGUN VARCHAR2(100) ,
	SIGUNENG VARCHAR2(100) ,
	EUPMYEON VARCHAR2(100),
	EUPMYEONENG VARCHAR2(100),
	DOROCODE VARCHAR2(100),
	DORONAME VARCHAR2(100),
	DOROENG VARCHAR2(100),
	JIHA VARCHAR2(100),
	BUILDINGO VARCHAR2(100),
	BUILDINGS VARCHAR2(100),
	BUILDINGCODE VARCHAR2(100),
	DELIVER VARCHAR2(100),
	SGGBUILDING VARCHAR2(100),
	BJDCODE VARCHAR2(100),
	BJDNAME VARCHAR2(100),
	LINAME VARCHAR2(100),
	HJDNAME VARCHAR2(100),
	MOUNTAIN VARCHAR2(100),
	JIO VARCHAR2(100),
	EMDNUM VARCHAR2(100),
	JIS VARCHAR2(100),
	PPOST VARCHAR2(100),
	POSTCODE VARCHAR2(100)
	);
	
SELECT COUNT(*) 
FROM POSTNEW;


CREATE TABLE POSTNEW(	
	ZIPCODE VARCHAR2(5),
	SIDO VARCHAR2(30),
	SIDOE VARCHAR2(60),
	SIGUNGU VARCHAR2(30),
	SIGUNGUE VARCHAR2(60),
	EUPMYUN VARCHAR2(30),
	EUPMYUNE VARCHAR2(60),
	DOROCODE VARCHAR2(12),
	DORO VARCHAR2(80),
	DOROE VARCHAR2(80),
	UNDERGROUND CHAR(1),
	BUILDINGNO1 NUMBER(5,0),
	BUILDINGNO2 NUMBER(5,0),
	BUILDINGMANAGENO VARCHAR2(25),
	DARYANG VARCHAR2(40),
	BUILDING VARCHAR2(200),
	DONGCODE VARCHAR2(10),
	DONG VARCHAR2(20),
	RI VARCHAR2(20),
	DONGADMIN VARCHAR2(40),
	SAN VARCHAR2(1),
	ZIBUN1 NUMBER(4,0),
	ZIBUNSERIAL VARCHAR2(2),
	ZIBUN2 NUMBER(4,0),
	OLDZIPCODE VARCHAR2(6),
	ZIPCODESERIAL VARCHAR2(3)
	
   )  ;
  
  
CREATE TABLE POST(	
	ZIPCODE VARCHAR2(5),
	SIDO VARCHAR2(30),
	SIDOE VARCHAR2(60),
	SIGUNGU VARCHAR2(30),
	SIGUNGUE VARCHAR2(60),
	EUPMYUN VARCHAR2(30),
	EUPMYUNE VARCHAR2(60),
	DOROCODE VARCHAR2(12),
	DORO VARCHAR2(80),
	DOROE VARCHAR2(80),
	UNDERGROUND CHAR(1),
	BUILDINGNO1 NUMBER(5,0),
	BUILDINGNO2 NUMBER(5,0),
	BUILDINGMANAGENO VARCHAR2(25),
	DARYANG VARCHAR2(40),
	BUILDING VARCHAR2(200),
	DONGCODE VARCHAR2(10),
	DONG VARCHAR2(20),
	RI VARCHAR2(20),
	DONGADMIN VARCHAR2(40),
	SAN VARCHAR2(1),
	ZIBUN1 NUMBER(4,0),
	ZIBUNSERIAL VARCHAR2(2),
	ZIBUN2 NUMBER(4,0),
	OLDZIPCODE VARCHAR2(6),
	ZIPCODESERIAL VARCHAR2(3)
	
   )  ;   







